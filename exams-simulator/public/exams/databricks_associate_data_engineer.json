[
  {
    "id": "databricks-001",
    "question": "A data organization leader is upset about the data analysis team’s reports being different from the data engineering team’s reports. The  leader believes the siloed nature of their organization’s data engineering and data analysis architectures is to blame.  Which of the following describes how a data lakehouse could alleviate this issue?",
    "options": [
      "Both teams would autoscale their work as data size evolves",
      "Both teams would use the same source of truth for their work",
      "Both teams would reorganize to report to the same department",
      "Both teams would be able to collaborate on projects in real-time",
      "Both teams would respond more quickly to ad-hoc requests"
    ],
    "answer": [
      "Both teams would autoscale their work as data size evolves"
    ],
    "topic": "Lakehouse Architecture"
  },
  {
    "id": "databricks-002",
    "question": "Which of the following describes a scenario in which a data team will want to utilize cluster pools?",
    "options": [
      "An automated report needs to be refreshed as quickly as possible.",
      "An automated report needs to be made reproducible.",
      "An automated report needs to be tested to identify errors.",
      "An automated report needs to be version-controlled across multiple collaborators.",
      "An automated report needs to be runnable by all stakeholders."
    ],
    "answer": [
      "An automated report needs to be refreshed as quickly as possible."
    ],
    "topic": "Cluster Management"
  },
  {
    "id": "databricks-003",
    "question": "Which of the following is hosted completely in the control plane of the classic Databricks architecture?",
    "options": [
      "Worker node",
      "JDBC data source",
      "Databricks web application",
      "Databricks Filesystem",
      "Driver node"
    ],
    "answer": [
      "Worker node"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-004",
    "question": "Which of the following benefits of using the Databricks Lakehouse Platform is provided by Delta Lake?",
    "options": [
      "The ability to manipulate the same data using a variety of languages",
      "The ability to collaborate in real time on a single notebook",
      "The ability to set up alerts for query failures",
      "The ability to support batch and streaming workloads",
      "The ability to distribute complex data operations"
    ],
    "answer": [
      "The ability to manipulate the same data using a variety of languages"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-005",
    "question": "Which of the following describes the storage organization of a Delta table?",
    "options": [
      "Delta tables are stored in a single file that contains data, history, metadata, and other attributes.",
      "Delta tables store their data in a single file and all metadata in a collection of files in a separate location.",
      "Delta tables are stored in a collection of files that contain data, history, metadata, and other attributes.",
      "Delta tables are stored in a collection of files that contain only the data stored within the table.",
      "Delta tables are stored in a single file that contains only the data stored within the table."
    ],
    "answer": [
      "Delta tables are stored in a single file that contains data, history, metadata, and other attributes."
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-006",
    "question": "Which of the following code blocks will remove the rows where the value in column age is greater than 25 from the existing Delta table  my_table and save the updated table?",
    "options": [
      "SELECT * FROM my_table WHERE age > 25;",
      "UPDATE my_table WHERE age > 25;",
      "DELETE FROM my_table WHERE age > 25;",
      "UPDATE my_table WHERE age <= 25;",
      "DELETE FROM my_table WHERE age <= 25;"
    ],
    "answer": [
      "SELECT * FROM my_table WHERE age > 25;"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-007",
    "question": "A data engineer has realized that they made a mistake when making a daily update to a table. They need to use Delta time travel to restore  the table to a version that is 3 days old. However, when the data engineer attempts to time travel to the older version, they are unable to  restore the data because the data files have been deleted.  Which of the following explains why the data files are no longer present?",
    "options": [
      "The VACUUM command was run on the table",
      "The TIME TRAVEL command was run on the table",
      "The DELETE HISTORY command was run on the table",
      "The OPTIMIZE command was nun on the table",
      "The HISTORY command was run on the table"
    ],
    "answer": [
      "The VACUUM command was run on the table"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-008",
    "question": "Which of the following Git operations must be performed outside of Databricks Repos?",
    "options": [
      "Commit",
      "Pull",
      "Push",
      "Clone",
      "Merge"
    ],
    "answer": [
      "Commit"
    ],
    "topic": "Version Control"
  },
  {
    "id": "databricks-009",
    "question": "Which of the following data lakehouse features results in improved data quality over a traditional data lake?",
    "options": [
      "A data lakehouse provides storage solutions for structured and unstructured data.",
      "A data lakehouse supports ACID-compliant transactions.",
      "A data lakehouse allows the use of SQL queries to examine data.",
      "A data lakehouse stores data in open formats.",
      "A data lakehouse enables machine learning and artificial Intelligence workloads."
    ],
    "answer": [
      "A data lakehouse provides storage solutions for structured and unstructured data."
    ],
    "topic": "Lakehouse Architecture"
  },
  {
    "id": "databricks-010",
    "question": "A data engineer needs to determine whether to use the built-in Databricks Notebooks versioning or version their project using Databricks  Repos.  Which of the following is an advantage of using Databricks Repos over the Databricks Notebooks versioning?",
    "options": [
      "Databricks Repos automatically saves development progress",
      "Databricks Repos supports the use of multiple branches",
      "Databricks Repos allows users to revert to previous versions of a notebook",
      "Databricks Repos provides the ability to comment on specific changes",
      "Databricks Repos is wholly housed within the Databricks Lakehouse Platform"
    ],
    "answer": [
      "Databricks Repos automatically saves development progress"
    ],
    "topic": "Version Control"
  },
  {
    "id": "databricks-011",
    "question": "A data engineer has left the organization. The data team needs to transfer ownership of the data engineer’s Delta tables to a new data  engineer. The new data engineer is the lead engineer on the data team.  Assuming the original data engineer no longer has access, which of the following individuals must be the one to transfer ownership of the  Delta tables in Data Explorer?",
    "options": [
      "Databricks account representative",
      "This transfer is not possible",
      "Workspace administrator",
      "New lead data engineer",
      "Original data engineer"
    ],
    "answer": [
      "Databricks account representative"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-012",
    "question": "A data analyst has created a Delta table sales that is used by the entire data analysis team. They want help from the data engineering team  to implement a series of tests to ensure the data is clean. However, the data engineering team uses Python for its tests rather than SQL.  Which of the following commands could the data engineering team use to access sales in PySpark?",
    "options": [
      "SELECT * FROM sales",
      "There is no way to share data between PySpark and SQL.",
      "spark.sql(\"sales\")D. spark.delta.table(\"sales\")",
      "spark.table(\"sales\")"
    ],
    "answer": [
      "SELECT * FROM sales"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-013",
    "question": "Which of the following commands will return the location of database customer360?",
    "options": [
      "DESCRIBE LOCATION customer360;",
      "DROP DATABASE customer360;",
      "DESCRIBE DATABASE customer360;",
      "ALTER DATABASE customer360 SET DBPROPERTIES ('location' = '/user'};",
      "USE DATABASE customer360;"
    ],
    "answer": [
      "DESCRIBE LOCATION customer360;"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-014",
    "question": "A data engineer wants to create a new table containing the names of customers that live in France.  They have written the following command:     A senior data engineer mentions that it is organization policy to include a table property indicating that the new table includes personally  identifiable information (PII).  Which of the following lines of code fills in the above blank to successfully complete the task?",
    "options": [
      "There is no way to indicate whether a table contains PII.",
      "\"COMMENT PII\"",
      "TBLPROPERTIES PII",
      "COMMENT \"Contains PII\"",
      "PII"
    ],
    "answer": [
      "There is no way to indicate whether a table contains PII."
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-015",
    "question": "Which of the following benefits is provided by the array functions from Spark SQL?",
    "options": [
      "An ability to work with data in a variety of types at once",
      "An ability to work with data within certain partitions and windows",
      "An ability to work with time-related data in specified intervals",
      "An ability to work with complex, nested data ingested from JSON files",
      "An ability to work with an array of tables for procedural automation"
    ],
    "answer": [
      "An ability to work with data in a variety of types at once"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-016",
    "question": "Which of the following commands can be used to write data into a Delta table while avoiding the writing of duplicate records?",
    "options": [
      "DROP",
      "IGNORE",
      "MERGE",
      "APPEND",
      "INSERT"
    ],
    "answer": [
      "DROP"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-017",
    "question": "A data engineer needs to apply custom logic to string column city in table stores for a specific use case. In order to apply this custom logic at  scale, the data engineer wants to create a SQL user-defined function (UDF).  Which of the following code blocks creates this SQL UDF?",
    "options": [
      "",
      "",
      "",
      "",
      ""
    ],
    "answer": [
      ""
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-018",
    "question": "A data analyst has a series of queries in a SQL program. The data analyst wants this program to run every day. They only want the final query  in the program to run on Sundays. They ask for help from the data engineering team to complete this task.  Which of the following approaches could be used by the data engineering team to complete this task?",
    "options": [
      "They could submit a feature request with Databricks to add this functionality.",
      "They could wrap the queries using PySpark and use Python’s control flow system to determine when to run the final query.",
      "They could only run the entire program on Sundays.",
      "They could automatically restrict access to the source table in the final query so that it is only accessible on Sundays.",
      "They could redesign the data model to separate the data used in the final query into a new table."
    ],
    "answer": [
      "They could submit a feature request with Databricks to add this functionality."
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-019",
    "question": "A data engineer runs a statement every day to copy the previous day’s sales into the table transactions. Each day’s sales are in their own file  in the location \"/transactions/raw\".  Today, the data engineer runs the following command to complete this task:     After running the command today, the data engineer notices that the number of records in table transactions has not changed.  Which of the following describes why the statement might not have copied any new records into the table?",
    "options": [
      "The format of the files to be copied were not included with the FORMAT_OPTIONS keyword.",
      "The names of the files to be copied were not included with the FILES keyword.",
      "The previous day’s file has already been copied into the table.",
      "The PARQUET file format does not support COPY INTO.",
      "The COPY INTO statement requires the table to be refreshed to view the copied rows."
    ],
    "answer": [
      "The format of the files to be copied were not included with the FORMAT_OPTIONS keyword."
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-020",
    "question": "A data engineer needs to create a table in Databricks using data from their organization’s existing SQLite database.  They run the following command:     Which of the following lines of code fills in the above blank to successfully complete the task?",
    "options": [
      "org.apache.spark.sql.jdbc",
      "autoloader",
      "DELTA",
      "sqlite",
      "org.apache.spark.sql.sqlite"
    ],
    "answer": [
      "org.apache.spark.sql.jdbc"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-021",
    "question": "A data engineering team has two tables. The first table march_transactions is a collection of all retail transactions in the month of March. The  second table april_transactions is a collection of all retail transactions in the month of April. There are no duplicate records between the  tables.  Which of the following commands should be run to create a new table all_transactions that contains all records from march_transactions and  april_transactions without duplicate records?     SELECT * FROM march_transactions  INNER JOIN SELECT * FROM april_transactions;   SELECT * FROM march_transactions  UNION SELECT * FROM april_transactions;   SELECT * FROM march_transactions  OUTER JOIN SELECT * FROM april_transactions;   SELECT * FROM march_transactions  INTERSECT SELECT * from april_transactions;   SELECT * FROM march_transactions  MERGE SELECT * FROM april_transactions;",
    "options": [
      "CREATE TABLE all_transactions AS",
      "CREATE TABLE all_transactions AS",
      "CREATE TABLE all_transactions AS",
      "CREATE TABLE all_transactions AS",
      "CREATE TABLE all_transactions AS"
    ],
    "answer": [
      "CREATE TABLE all_transactions AS"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-022",
    "question": "A data engineer only wants to execute the final block of a Python program if the Python variable day_of_week is equal to 1 and the Python  variable review_period is True.  Which of the following control flow statements should the data engineer use to begin this conditionally executed code block?",
    "options": [
      "if day_of_week = 1 and review_period:",
      "if day_of_week = 1 and review_period = \"True\":",
      "if day_of_week == 1 and review_period == \"True\":",
      "if day_of_week == 1 and review_period:",
      "if day_of_week = 1 & review_period: = \"True\":"
    ],
    "answer": [
      "if day_of_week = 1 and review_period:"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-023",
    "question": "A data engineer is attempting to drop a Spark SQL table my_table. The data engineer wants to delete all table metadata and data.  They run the following command:    DROP TABLE IF EXISTS my_table -  While the object no longer appears when they run SHOW TABLES, the data files still exist.  Which of the following describes why the data files still exist and the metadata files were deleted?",
    "options": [
      "The table’s data was larger than 10 GB",
      "The table’s data was smaller than 10 GB",
      "The table was external",
      "The table did not have a location",
      "The table was managed"
    ],
    "answer": [
      "The table’s data was larger than 10 GB"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-024",
    "question": "A data engineer wants to create a data entity from a couple of tables. The data entity must be used by other data engineers in other sessions.  It also must be saved to a physical location.  Which of the following data entities should the data engineer create?",
    "options": [
      "Database",
      "Function",
      "View",
      "Temporary view",
      "Table"
    ],
    "answer": [
      "Database"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-025",
    "question": "A data engineer is maintaining a data pipeline. Upon data ingestion, the data engineer notices that the source data is starting to have a lower  level of quality. The data engineer would like to automate the process of monitoring the quality level.  Which of the following tools can the data engineer use to solve this problem?",
    "options": [
      "Unity Catalog",
      "Data Explorer",
      "Delta Lake",
      "Delta Live Tables",
      "Auto Loader"
    ],
    "answer": [
      "Unity Catalog"
    ],
    "topic": "Jobs & Pipelines"
  },
  {
    "id": "databricks-026",
    "question": "A Delta Live Table pipeline includes two datasets defined using STREAMING LIVE TABLE. Three datasets are defined against Delta Lake table  sources using LIVE TABLE.  The table is configured to run in Production mode using the Continuous Pipeline Mode.  Assuming previously unprocessed data exists and all definitions are valid, what is the expected outcome after clicking Start to update the  pipeline?     testing.   unused.   terminated when the pipeline is stopped.",
    "options": [
      "All datasets will be updated at set intervals until the pipeline is shut down. The compute resources will persist to allow for additional",
      "All datasets will be updated once and the pipeline will persist without any processing. The compute resources will persist but go",
      "All datasets will be updated at set intervals until the pipeline is shut down. The compute resources will be deployed for the update and",
      "All datasets will be updated once and the pipeline will shut down. The compute resources will be terminated.",
      "All datasets will be updated once and the pipeline will shut down. The compute resources will persist to allow for additional testing."
    ],
    "answer": [
      "All datasets will be updated at set intervals until the pipeline is shut down. The compute resources will persist to allow for additional"
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-027",
    "question": "In order for Structured Streaming to reliably track the exact progress of the processing so that it can handle any kind of failure by restarting  and/or reprocessing, which of the following two approaches is used by Spark to record the offset range of the data being processed in each  trigger?",
    "options": [
      "Checkpointing and Write-ahead Logs",
      "Structured Streaming cannot record the offset range of the data being processed in each trigger.",
      "Replayable Sources and Idempotent Sinks",
      "Write-ahead Logs and Idempotent Sinks",
      "Checkpointing and Idempotent Sinks"
    ],
    "answer": [
      "Checkpointing and Write-ahead Logs"
    ],
    "topic": "Structured Streaming"
  },
  {
    "id": "databricks-028",
    "question": "Which of the following describes the relationship between Gold tables and Silver tables?",
    "options": [
      "Gold tables are more likely to contain aggregations than Silver tables.",
      "Gold tables are more likely to contain valuable data than Silver tables.",
      "Gold tables are more likely to contain a less refined view of data than Silver tables.",
      "Gold tables are more likely to contain more data than Silver tables.",
      "Gold tables are more likely to contain truthful data than Silver tables."
    ],
    "answer": [
      "Gold tables are more likely to contain aggregations than Silver tables."
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-029",
    "question": "Which of the following describes the relationship between Bronze tables and raw data?",
    "options": [
      "Bronze tables contain less data than raw data files.",
      "Bronze tables contain more truthful data than raw data.",
      "Bronze tables contain aggregates while raw data is unaggregated.",
      "Bronze tables contain a less refined view of data than raw data.",
      "Bronze tables contain raw data with a schema applied."
    ],
    "answer": [
      "Bronze tables contain less data than raw data files."
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-030",
    "question": "Which of the following tools is used by Auto Loader process data incrementally?",
    "options": [
      "Checkpointing",
      "Spark Structured Streaming",
      "Data Explorer",
      "Unity Catalog",
      "Databricks SQL"
    ],
    "answer": [
      "Checkpointing"
    ],
    "topic": "Auto Loader"
  },
  {
    "id": "databricks-031",
    "question": "A data engineer has configured a Structured Streaming job to read from a table, manipulate the data, and then perform a streaming write into  a new table.  The cade block used by the data engineer is below:     If the data engineer only wants the query to execute a micro-batch to process data every 5 seconds, which of the following lines of code  should the data engineer use to fill in the blank?",
    "options": [
      "trigger(\"5 seconds\")",
      "trigger()",
      "trigger(once=\"5 seconds\")",
      "trigger(processingTime=\"5 seconds\")",
      "trigger(continuous=\"5 seconds\")"
    ],
    "answer": [
      "trigger(\"5 seconds\")"
    ],
    "topic": "Structured Streaming"
  },
  {
    "id": "databricks-032",
    "question": "A dataset has been defined using Delta Live Tables and includes an expectations clause:  CONSTRAINT valid_timestamp EXPECT (timestamp > '2020-01-01') ON VIOLATION DROP ROW  What is the expected behavior when a batch of data containing data that violates these constraints is processed?",
    "options": [
      "Records that violate the expectation are dropped from the target dataset and loaded into a quarantine table.",
      "Records that violate the expectation are added to the target dataset and flagged as invalid in a field added to the target dataset.",
      "Records that violate the expectation are dropped from the target dataset and recorded as invalid in the event log.",
      "Records that violate the expectation are added to the target dataset and recorded as invalid in the event log.",
      "Records that violate the expectation cause the job to fail."
    ],
    "answer": [
      "Records that violate the expectation are dropped from the target dataset and loaded into a quarantine table."
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-033",
    "question": "Which of the following describes when to use the CREATE STREAMING LIVE TABLE (formerly CREATE INCREMENTAL LIVE TABLE) syntax over  the CREATE LIVE TABLE syntax when creating Delta Live Tables (DLT) tables using SQL?",
    "options": [
      "CREATE STREAMING LIVE TABLE should be used when the subsequent step in the DLT pipeline is static.",
      "CREATE STREAMING LIVE TABLE should be used when data needs to be processed incrementally.",
      "CREATE STREAMING LIVE TABLE is redundant for DLT and it does not need to be used.",
      "CREATE STREAMING LIVE TABLE should be used when data needs to be processed through complicated aggregations.",
      "CREATE STREAMING LIVE TABLE should be used when the previous step in the DLT pipeline is static."
    ],
    "answer": [
      "CREATE STREAMING LIVE TABLE should be used when the subsequent step in the DLT pipeline is static."
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-034",
    "question": "A data engineer is designing a data pipeline. The source system generates files in a shared directory that is also used by other processes. As  a result, the files should be kept as is and will accumulate in the directory. The data engineer needs to identify which files are new since the  previous run in the pipeline, and set up the pipeline to only ingest those new files with each run.  Which of the following tools can the data engineer use to solve this problem?",
    "options": [
      "Unity Catalog",
      "Delta Lake",
      "Databricks SQL",
      "Data Explorer",
      "Auto Loader"
    ],
    "answer": [
      "Unity Catalog"
    ],
    "topic": "Jobs & Pipelines"
  },
  {
    "id": "databricks-035",
    "question": "Which of the following Structured Streaming queries is performing a hop from a Silver table to a Gold table?",
    "options": [
      "",
      "",
      "",
      "",
      ""
    ],
    "answer": [
      ""
    ],
    "topic": "Structured Streaming"
  },
  {
    "id": "databricks-036",
    "question": "A data engineer has three tables in a Delta Live Tables (DLT) pipeline. They have configured the pipeline to drop invalid records at each table.  They notice that some data is being dropped due to quality concerns at some point in the DLT pipeline. They would like to determine at which  table in their pipeline the data is being dropped.  Which of the following approaches can the data engineer take to identify the table that is dropping the records?",
    "options": [
      "They can set up separate expectations for each table when developing their DLT pipeline.",
      "They cannot determine which table is dropping the records.",
      "They can set up DLT to notify them via email when records are dropped.",
      "They can navigate to the DLT pipeline page, click on each table, and view the data quality statistics.",
      "They can navigate to the DLT pipeline page, click on the “Error” button, and review the present errors."
    ],
    "answer": [
      "They can set up separate expectations for each table when developing their DLT pipeline."
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-037",
    "question": "A data engineer has a single-task Job that runs each morning before they begin working. After identifying an upstream data issue, they need  to set up another task to run a new notebook prior to the original task.  Which of the following approaches can the data engineer use to set up the new task?",
    "options": [
      "They can clone the existing task in the existing Job and update it to run the new notebook.",
      "They can create a new task in the existing Job and then add it as a dependency of the original task.",
      "They can create a new task in the existing Job and then add the original task as a dependency of the new task.",
      "They can create a new job from scratch and add both tasks to run concurrently.",
      "They can clone the existing task to a new Job and then edit it to run the new notebook."
    ],
    "answer": [
      "They can clone the existing task in the existing Job and update it to run the new notebook."
    ],
    "topic": "Jobs & Pipelines"
  },
  {
    "id": "databricks-038",
    "question": "An engineering manager wants to monitor the performance of a recent project using a Databricks SQL query. For the first week following the  project’s release, the manager wants the query results to be updated every minute. However, the manager is concerned that the compute  resources used for the query will be left running and cost the organization a lot of money beyond the first week of the project’s release.  Which of the following approaches can the engineering team use to ensure the query does not cost the organization any money beyond the  first week of the project’s release?",
    "options": [
      "They can set a limit to the number of DBUs that are consumed by the SQL Endpoint.",
      "They can set the query’s refresh schedule to end after a certain number of refreshes.",
      "They cannot ensure the query does not cost the organization money beyond the first week of the project’s release.",
      "They can set a limit to the number of individuals that are able to manage the query’s refresh schedule.",
      "They can set the query’s refresh schedule to end on a certain date in the query scheduler."
    ],
    "answer": [
      "They can set a limit to the number of DBUs that are consumed by the SQL Endpoint."
    ],
    "topic": "Databricks SQL"
  },
  {
    "id": "databricks-039",
    "question": "A data analysis team has noticed that their Databricks SQL queries are running too slowly when connected to their always-on SQL endpoint.  They claim that this issue is present when many members of the team are running small queries simultaneously. They ask the data  engineering team for help. The data engineering team notices that each of the team’s queries uses the same SQL endpoint.  Which of the following approaches can the data engineering team use to improve the latency of the team’s queries?",
    "options": [
      "They can increase the cluster size of the SQL endpoint.",
      "They can increase the maximum bound of the SQL endpoint’s scaling range.",
      "They can turn on the Auto Stop feature for the SQL endpoint.",
      "They can turn on the Serverless feature for the SQL endpoint.",
      "They can turn on the Serverless feature for the SQL endpoint and change the Spot Instance Policy to “Reliability Optimized.”"
    ],
    "answer": [
      "They can increase the cluster size of the SQL endpoint."
    ],
    "topic": "Databricks SQL"
  },
  {
    "id": "databricks-040",
    "question": "A data engineer wants to schedule their Databricks SQL dashboard to refresh once per day, but they only want the associated SQL endpoint to  be running when it is necessary.  Which of the following approaches can the data engineer use to minimize the total running time of the SQL endpoint used in the refresh  schedule of their dashboard?",
    "options": [
      "They can ensure the dashboard’s SQL endpoint matches each of the queries’ SQL endpoints.",
      "They can set up the dashboard’s SQL endpoint to be serverless.",
      "They can turn on the Auto Stop feature for the SQL endpoint.",
      "They can reduce the cluster size of the SQL endpoint.",
      "They can ensure the dashboard’s SQL endpoint is not one of the included query’s SQL endpoint."
    ],
    "answer": [
      "They can ensure the dashboard’s SQL endpoint matches each of the queries’ SQL endpoints."
    ],
    "topic": "Databricks SQL"
  },
  {
    "id": "databricks-041",
    "question": "A data engineer has been using a Databricks SQL dashboard to monitor the cleanliness of the input data to an ELT job. The ELT job has its  Databricks SQL query that returns the number of input records containing unexpected NULL values. The data engineer wants their entire team  to be notified via a messaging webhook whenever this value reaches 100.  Which of the following approaches can the data engineer use to notify their entire team via a messaging webhook whenever the number of  NULL values reaches 100?",
    "options": [
      "They can set up an Alert with a custom template.",
      "They can set up an Alert with a new email alert destination.",
      "They can set up an Alert with a new webhook alert destination.",
      "They can set up an Alert with one-time notifications.",
      "They can set up an Alert without notifications."
    ],
    "answer": [
      "They can set up an Alert with a custom template."
    ],
    "topic": "Databricks SQL"
  },
  {
    "id": "databricks-042",
    "question": "A single Job runs two notebooks as two separate tasks. A data engineer has noticed that one of the notebooks is running slowly in the Job’s  current run. The data engineer asks a tech lead for help in identifying why this might be the case.  Which of the following approaches can the tech lead use to identify why the notebook is running slowly as part of the Job?",
    "options": [
      "They can navigate to the Runs tab in the Jobs UI to immediately review the processing notebook.",
      "They can navigate to the Tasks tab in the Jobs UI and click on the active run to review the processing notebook.",
      "They can navigate to the Runs tab in the Jobs UI and click on the active run to review the processing notebook.",
      "There is no way to determine why a Job task is running slowly.",
      "They can navigate to the Tasks tab in the Jobs UI to immediately review the processing notebook."
    ],
    "answer": [
      "They can navigate to the Runs tab in the Jobs UI to immediately review the processing notebook."
    ],
    "topic": "Jobs & Pipelines"
  },
  {
    "id": "databricks-043",
    "question": "A data engineer has a Job with multiple tasks that runs nightly. Each of the tasks runs slowly because the clusters take a long time to start.  Which of the following actions can the data engineer perform to improve the start up time for the clusters used for the Job?",
    "options": [
      "They can use endpoints available in Databricks SQL",
      "They can use jobs clusters instead of all-purpose clusters",
      "They can configure the clusters to be single-node",
      "They can use clusters that are from a cluster pool",
      "They can configure the clusters to autoscale for larger data sizes"
    ],
    "answer": [
      "They can use endpoints available in Databricks SQL"
    ],
    "topic": "Cluster Management"
  },
  {
    "id": "databricks-044",
    "question": "A new data engineering team team. has been assigned to an ELT project. The new data engineering team will need full privileges on the  database customers to fully manage the project.  Which of the following commands can be used to grant full permissions on the database to the new data engineering team?",
    "options": [
      "GRANT USAGE ON DATABASE customers TO team;",
      "GRANT ALL PRIVILEGES ON DATABASE team TO customers;",
      "GRANT SELECT PRIVILEGES ON DATABASE customers TO teams;",
      "GRANT SELECT CREATE MODIFY USAGE PRIVILEGES ON DATABASE customers TO team;",
      "GRANT ALL PRIVILEGES ON DATABASE customers TO team;"
    ],
    "answer": [
      "GRANT USAGE ON DATABASE customers TO team;"
    ],
    "topic": "Security & Access Control"
  },
  {
    "id": "databricks-045",
    "question": "A new data engineering team has been assigned to work on a project. The team will need access to database customers in order to see what  tables already exist. The team has its own group team.  Which of the following commands can be used to grant the necessary permission on the entire database to the new team?",
    "options": [
      "GRANT VIEW ON CATALOG customers TO team;",
      "GRANT CREATE ON DATABASE customers TO team;",
      "GRANT USAGE ON CATALOG team TO customers;",
      "GRANT CREATE ON DATABASE team TO customers;",
      "GRANT USAGE ON DATABASE customers TO team;"
    ],
    "answer": [
      "GRANT VIEW ON CATALOG customers TO team;"
    ],
    "topic": "Security & Access Control"
  },
  {
    "id": "databricks-046",
    "question": "A data engineer is running code in a Databricks Repo that is cloned from a central Git repository. A colleague of the data engineer informs  them that changes have been made and synced to the central Git repository. The data engineer now needs to sync their Databricks Repo to  get the changes from the central Git repository.    Which of the following Git operations does the data engineer need to run to accomplish this task?",
    "options": [
      "Merge",
      "Push",
      "Pull",
      "Commit",
      "Clone"
    ],
    "answer": [
      "Merge"
    ],
    "topic": "Version Control"
  },
  {
    "id": "databricks-047",
    "question": "Which of the following is a benefit of the Databricks Lakehouse Platform embracing open source technologies?",
    "options": [
      "Cloud-specific integrations",
      "Simplified governance",
      "Ability to scale storage",
      "Ability to scale workloads",
      "Avoiding vendor lock-in"
    ],
    "answer": [
      "Cloud-specific integrations"
    ],
    "topic": "Lakehouse Architecture"
  },
  {
    "id": "databricks-048",
    "question": "A data engineer needs to use a Delta table as part of a data pipeline, but they do not know if they have the appropriate permissions.    In which of the following locations can the data engineer review their permissions on the table?",
    "options": [
      "Databricks Filesystem",
      "Jobs",
      "Dashboards",
      "Repos",
      "Data Explorer"
    ],
    "answer": [
      "Databricks Filesystem"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-049",
    "question": "Which of the following describes a scenario in which a data engineer will want to use a single-node cluster?",
    "options": [
      "When they are working interactively with a small amount of data",
      "When they are running automated reports to be refreshed as quickly as possible",
      "When they are working with SQL within Databricks SQL",
      "When they are concerned about the ability to automatically scale with larger data",
      "When they are manually running reports with a large amount of data"
    ],
    "answer": [
      "When they are working interactively with a small amount of data"
    ],
    "topic": "Cluster Management"
  },
  {
    "id": "databricks-050",
    "question": "A data engineer has been given a new record of data:    id STRING = 'a1'  rank INTEGER = 6  rating FLOAT = 9.4    Which of the following SQL commands can be used to append the new record to an existing Delta table my_table?",
    "options": [
      "INSERT INTO my_table VALUES ('a1', 6, 9.4)",
      "my_table UNION VALUES ('a1', 6, 9.4)",
      "INSERT VALUES ( 'a1' , 6, 9.4) INTO my_table",
      "UPDATE my_table VALUES ('a1', 6, 9.4)",
      "UPDATE VALUES ('a1', 6, 9.4) my_table"
    ],
    "answer": [
      "INSERT INTO my_table VALUES ('a1', 6, 9.4)"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-051",
    "question": "A data engineer has realized that the data files associated with a Delta table are incredibly small. They want to compact the small files to  form larger files to improve performance.    Which of the following keywords can be used to compact the small files?",
    "options": [
      "REDUCE",
      "OPTIMIZE",
      "COMPACTION",
      "REPARTITION",
      "VACUUM"
    ],
    "answer": [
      "REDUCE"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-052",
    "question": "In which of the following file formats is data from Delta Lake tables primarily stored?",
    "options": [
      "Delta",
      "CSV",
      "Parquet",
      "JSON",
      "A proprietary, optimized format specific to Databricks"
    ],
    "answer": [
      "Delta"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-053",
    "question": "Which of the following is stored in the Databricks customer's cloud account?",
    "options": [
      "Databricks web application",
      "Cluster management metadata",
      "Repos",
      "Data",
      "Notebooks"
    ],
    "answer": [
      "Databricks web application"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-054",
    "question": "Which of the following can be used to simplify and unify siloed data architectures that are specialized for specific use cases?",
    "options": [
      "None of these",
      "Data lake",
      "Data warehouse",
      "All of these",
      "Data lakehouse"
    ],
    "answer": [
      "None of these"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-055",
    "question": "A data architect has determined that a table of the following format is necessary:     Which of the following code blocks uses SQL DDL commands to create an empty Delta table in the above format regardless of whether a table  already exists with this name?",
    "options": [
      "",
      "",
      "",
      "",
      ""
    ],
    "answer": [
      ""
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-056",
    "question": "A data engineer has a Python notebook in Databricks, but they need to use SQL to accomplish a specific task within a cell. They still want all  of the other cells to use Python without making any changes to those cells.    Which of the following describes how the data engineer can use SQL within a cell of their Python notebook?",
    "options": [
      "It is not possible to use SQL in a Python notebook",
      "They can attach the cell to a SQL endpoint rather than a Databricks cluster",
      "They can simply write SQL syntax in the cell",
      "They can add %sql to the first line of the cell",
      "They can change the default language of the notebook to SQL"
    ],
    "answer": [
      "It is not possible to use SQL in a Python notebook"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-057",
    "question": "Which of the following SQL keywords can be used to convert a table from a long format to a wide format?",
    "options": [
      "TRANSFORM",
      "PIVOT",
      "SUM",
      "CONVERT",
      "WHERE"
    ],
    "answer": [
      "TRANSFORM"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-058",
    "question": "Which of the following describes a benefit of creating an external table from Parquet rather than CSV when using a CREATE TABLE AS SELECT  statement?",
    "options": [
      "Parquet files can be partitioned",
      "CREATE TABLE AS SELECT statements cannot be used on files",
      "Parquet files have a well-defined schema",
      "Parquet files have the ability to be optimized",
      "Parquet files will become Delta tables"
    ],
    "answer": [
      "Parquet files can be partitioned"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-059",
    "question": "A data engineer wants to create a relational object by pulling data from two tables. The relational object does not need to be used by other  data engineers in other sessions. In order to save on storage costs, the data engineer wants to avoid copying and storing physical data.    Which of the following relational objects should the data engineer create?",
    "options": [
      "Spark SQL Table",
      "View",
      "Database",
      "Temporary view",
      "Delta Table"
    ],
    "answer": [
      "Spark SQL Table"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-060",
    "question": "A data analyst has developed a query that runs against Delta table. They want help from the data engineering team to implement a series of  tests to ensure the data returned by the query is clean. However, the data engineering team uses Python for its tests rather than SQL.    Which of the following operations could the data engineering team use to run the query and operate with the results in PySpark?",
    "options": [
      "SELECT * FROM sales",
      "spark.delta.table",
      "spark.sql",
      "There is no way to share data between PySpark and SQL.",
      "spark.table"
    ],
    "answer": [
      "SELECT * FROM sales"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-061",
    "question": "Which of the following commands will return the number of null values in the member_id column?",
    "options": [
      "SELECT count(member_id) FROM my_table;",
      "SELECT count(member_id) - count_null(member_id) FROM my_table;",
      "SELECT count_if(member_id IS NULL) FROM my_table;",
      "SELECT null(member_id) FROM my_table;",
      "SELECT count_null(member_id) FROM my_table;"
    ],
    "answer": [
      "SELECT count(member_id) FROM my_table;"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-062",
    "question": "A data engineer needs to apply custom logic to identify employees with more than 5 years of experience in array column employees in table  stores. The custom logic should create a new column exp_employees that is an array of all of the employees with more than 5 years of  experience for each row. In order to apply this custom logic at scale, the data engineer wants to use the FILTER higher-order function.    Which of the following code blocks successfully completes this task?",
    "options": [
      "",
      "",
      "",
      "",
      ""
    ],
    "answer": [
      ""
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-063",
    "question": "A data engineer has a Python variable table_name that they would like to use in a SQL query. They want to construct a Python code block that  will run the query using table_name.    They have the following incomplete code block:    ____(f\"SELECT customer_id, spend FROM {table_name}\")    Which of the following can be used to fill in the blank to successfully complete the task?",
    "options": [
      "spark.delta.sql",
      "spark.delta.table",
      "spark.table",
      "dbutils.sql",
      "spark.sql"
    ],
    "answer": [
      "spark.delta.sql"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-064",
    "question": "A data engineer has created a new database using the following command:    CREATE DATABASE IF NOT EXISTS customer360;    In which of the following locations will the customer360 database be located?",
    "options": [
      "dbfs:/user/hive/database/customer360",
      "dbfs:/user/hive/warehouse",
      "dbfs:/user/hive/customer360",
      "More information is needed to determine the correct response",
      "dbfs:/user/hive/database"
    ],
    "answer": [
      "dbfs:/user/hive/database/customer360"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-065",
    "question": "A data engineer is attempting to drop a Spark SQL table my_table and runs the following command:    DROP TABLE IF EXISTS my_table;    After running this command, the engineer notices that the data files and metadata files have been deleted from the file system.    Which of the following describes why all of these files were deleted?",
    "options": [
      "The table was managed",
      "The table's data was smaller than 10 GB",
      "The table's data was larger than 10 GB",
      "The table was external",
      "The table did not have a location"
    ],
    "answer": [
      "The table was managed"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-066",
    "question": "A data engineer that is new to using Python needs to create a Python function to add two integers together and return the sum?    Which of the following code blocks can the data engineer use to complete this task?",
    "options": [
      "",
      "",
      "",
      "",
      ""
    ],
    "answer": [
      ""
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-067",
    "question": "In which of the following scenarios should a data engineer use the MERGE INTO command instead of the INSERT INTO command?",
    "options": [
      "When the location of the data needs to be changed",
      "When the target table is an external table",
      "When the source table can be deleted",
      "When the target table cannot contain duplicate records",
      "When the source is not a Delta table"
    ],
    "answer": [
      "When the location of the data needs to be changed"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-068",
    "question": "A data engineer is working with two tables. Each of these tables is displayed below in its entirety.     The data engineer runs the following query to join these tables together:     Which of the following will be returned by the above query?",
    "options": [
      "",
      "",
      "",
      "",
      ""
    ],
    "answer": [
      ""
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-069",
    "question": "A data engineer needs to create a table in Databricks using data from a CSV file at location /path/to/csv.    They run the following command:     Which of the following lines of code fills in the above blank to successfully complete the task?",
    "options": [
      "None of these lines of code are needed to successfully complete the task",
      "USING CSV",
      "FROM CSV",
      "USING DELTA",
      "FROM \"path/to/csv\""
    ],
    "answer": [
      "None of these lines of code are needed to successfully complete the task"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-070",
    "question": "A data engineer has configured a Structured Streaming job to read from a table, manipulate the data, and then perform a streaming write into  a new table.    The code block used by the data engineer is below:     If the data engineer only wants the query to process all of the available data in as many batches as required, which of the following lines of  code should the data engineer use to fill in the blank?",
    "options": [
      "processingTime(1)",
      "trigger(availableNow=True)",
      "trigger(parallelBatch=True)",
      "trigger(processingTime=\"once\")",
      "trigger(continuous=\"once\")"
    ],
    "answer": [
      "processingTime(1)"
    ],
    "topic": "Structured Streaming"
  },
  {
    "id": "databricks-071",
    "question": "A data engineer has developed a data pipeline to ingest data from a JSON source using Auto Loader, but the engineer has not provided any  type inference or schema hints in their pipeline. Upon reviewing the data, the data engineer has noticed that all of the columns in the target  table are of the string type despite some of the fields only including float or boolean values.    Which of the following describes why Auto Loader inferred all of the columns to be of the string type?",
    "options": [
      "There was a type mismatch between the specific schema and the inferred schema",
      "JSON data is a text-based format",
      "Auto Loader only works with string data",
      "All of the fields had at least one null value",
      "Auto Loader cannot infer the schema of ingested data"
    ],
    "answer": [
      "There was a type mismatch between the specific schema and the inferred schema"
    ],
    "topic": "Auto Loader"
  },
  {
    "id": "databricks-072",
    "question": "A Delta Live Table pipeline includes two datasets defined using STREAMING LIVE TABLE. Three datasets are defined against Delta Lake table  sources using LIVE TABLE.    The table is configured to run in Development mode using the Continuous Pipeline Mode.    Assuming previously unprocessed data exists and all definitions are valid, what is the expected outcome after clicking Start to update the  pipeline?      down.   unused.    testing.",
    "options": [
      "All datasets will be updated once and the pipeline will shut down. The compute resources will be terminated.",
      "All datasets will be updated at set intervals until the pipeline is shut down. The compute resources will persist until the pipeline is shut",
      "All datasets will be updated once and the pipeline will persist without any processing. The compute resources will persist but go",
      "All datasets will be updated once and the pipeline will shut down. The compute resources will persist to allow for additional testing.",
      "All datasets will be updated at set intervals until the pipeline is shut down. The compute resources will persist to allow for additional"
    ],
    "answer": [
      "All datasets will be updated once and the pipeline will shut down. The compute resources will be terminated."
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-073",
    "question": "Which of the following data workloads will utilize a Gold table as its source?",
    "options": [
      "A job that enriches data by parsing its timestamps into a human-readable format",
      "A job that aggregates uncleaned data to create standard summary statistics",
      "A job that cleans data by removing malformatted records",
      "A job that queries aggregated data designed to feed into a dashboard",
      "A job that ingests raw data from a streaming source into the Lakehouse"
    ],
    "answer": [
      "A job that enriches data by parsing its timestamps into a human-readable format"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-074",
    "question": "Which of the following must be specified when creating a new Delta Live Tables pipeline?",
    "options": [
      "A key-value pair configuration",
      "The preferred DBU/hour cost",
      "A path to cloud storage location for the written data",
      "A location of a target database for the written data",
      "At least one notebook library to be executed"
    ],
    "answer": [
      "A key-value pair configuration"
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-075",
    "question": "A data engineer has joined an existing project and they see the following query in the project repository:    CREATE STREAMING LIVE TABLE loyal_customers AS    SELECT customer_id -  FROM STREAM(LIVE.customers)  WHERE loyalty_level = 'high';    Which of the following describes why the STREAM function is included in the query?",
    "options": [
      "The STREAM function is not needed and will cause an error.",
      "The table being created is a live table.",
      "The customers table is a streaming live table.",
      "The customers table is a reference to a Structured Streaming query on a PySpark DataFrame.",
      "The data in the customers table has been updated since its last run."
    ],
    "answer": [
      "The STREAM function is not needed and will cause an error."
    ],
    "topic": "Structured Streaming"
  },
  {
    "id": "databricks-076",
    "question": "Which of the following describes the type of workloads that are always compatible with Auto Loader?",
    "options": [
      "Streaming workloads",
      "Machine learning workloads",
      "Serverless workloads",
      "Batch workloads",
      "Dashboard workloads"
    ],
    "answer": [
      "Streaming workloads"
    ],
    "topic": "Auto Loader"
  },
  {
    "id": "databricks-077",
    "question": "A data engineer and data analyst are working together on a data pipeline. The data engineer is working on the raw, bronze, and silver layers  of the pipeline using Python, and the data analyst is working on the gold layer of the pipeline using SQL. The raw source of the pipeline is a  streaming input. They now want to migrate their pipeline to use Delta Live Tables.    Which of the following changes will need to be made to the pipeline when migrating to Delta Live Tables?",
    "options": [
      "None of these changes will need to be made",
      "The pipeline will need to stop using the medallion-based multi-hop architecture",
      "The pipeline will need to be written entirely in SQL",
      "The pipeline will need to use a batch source in place of a streaming source",
      "The pipeline will need to be written entirely in Python"
    ],
    "answer": [
      "None of these changes will need to be made"
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-078",
    "question": "A data engineer is using the following code block as part of a batch ingestion pipeline to read from a composable table:     Which of the following changes needs to be made so this code block will work when the transactions table is a stream source?",
    "options": [
      "Replace predict with a stream-friendly prediction function",
      "Replace schema(schema) with option (\"maxFilesPerTrigger\", 1)",
      "Replace \"transactions\" with the path to the location of the Delta table",
      "Replace format(\"delta\") with format(\"stream\")",
      "Replace spark.read with spark.readStream"
    ],
    "answer": [
      "Replace predict with a stream-friendly prediction function"
    ],
    "topic": "Jobs & Pipelines"
  },
  {
    "id": "databricks-079",
    "question": "Which of the following queries is performing a streaming hop from raw data to a Bronze table?",
    "options": [
      "",
      "",
      "",
      "",
      ""
    ],
    "answer": [
      ""
    ],
    "topic": "Structured Streaming"
  },
  {
    "id": "databricks-080",
    "question": "A dataset has been defined using Delta Live Tables and includes an expectations clause:    CONSTRAINT valid_timestamp EXPECT (timestamp > '2020-01-01') ON VIOLATION FAIL UPDATE    What is the expected behavior when a batch of data containing data that violates these constraints is processed?",
    "options": [
      "Records that violate the expectation are dropped from the target dataset and recorded as invalid in the event log.",
      "Records that violate the expectation cause the job to fail.",
      "Records that violate the expectation are dropped from the target dataset and loaded into a quarantine table.",
      "Records that violate the expectation are added to the target dataset and recorded as invalid in the event log.",
      "Records that violate the expectation are added to the target dataset and flagged as invalid in a field added to the target dataset."
    ],
    "answer": [
      "Records that violate the expectation are dropped from the target dataset and recorded as invalid in the event log."
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-081",
    "question": "Which of the following statements regarding the relationship between Silver tables and Bronze tables is always true?",
    "options": [
      "Silver tables contain a less refined, less clean view of data than Bronze data.",
      "Silver tables contain aggregates while Bronze data is unaggregated.",
      "Silver tables contain more data than Bronze tables.",
      "Silver tables contain a more refined and cleaner view of data than Bronze tables.",
      "Silver tables contain less data than Bronze tables."
    ],
    "answer": [
      "Silver tables contain a less refined, less clean view of data than Bronze data."
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-082",
    "question": "A data engineering team has noticed that their Databricks SQL queries are running too slowly when they are submitted to a non-running SQL  endpoint. The data engineering team wants this issue to be resolved.    Which of the following approaches can the team use to reduce the time it takes to return results in this scenario?",
    "options": [
      "They can turn on the Serverless feature for the SQL endpoint and change the Spot Instance Policy to \"Reliability Optimized.\"",
      "They can turn on the Auto Stop feature for the SQL endpoint.",
      "They can increase the cluster size of the SQL endpoint.",
      "They can turn on the Serverless feature for the SQL endpoint.",
      "They can increase the maximum bound of the SQL endpoint's scaling range."
    ],
    "answer": [
      "They can turn on the Serverless feature for the SQL endpoint and change the Spot Instance Policy to \"Reliability Optimized.\""
    ],
    "topic": "Databricks SQL"
  },
  {
    "id": "databricks-083",
    "question": "A data engineer has a Job that has a complex run schedule, and they want to transfer that schedule to other Jobs.    Rather than manually selecting each value in the scheduling form in Databricks, which of the following tools can the data engineer use to  represent and submit the schedule programmatically?",
    "options": [
      "pyspark.sql.types.DateType",
      "datetime",
      "pyspark.sql.types.TimestampType",
      "Cron syntax",
      "There is no way to represent and submit this information programmatically"
    ],
    "answer": [
      "pyspark.sql.types.DateType"
    ],
    "topic": "Jobs & Pipelines"
  },
  {
    "id": "databricks-084",
    "question": "Which of the following approaches should be used to send the Databricks Job owner an email in the case that the Job fails?",
    "options": [
      "Manually programming in an alert system in each cell of the Notebook",
      "Setting up an Alert in the Job page",
      "Setting up an Alert in the Notebook",
      "There is no way to notify the Job owner in the case of Job failure",
      "MLflow Model Registry Webhooks"
    ],
    "answer": [
      "Manually programming in an alert system in each cell of the Notebook"
    ],
    "topic": "Jobs & Pipelines"
  },
  {
    "id": "databricks-085",
    "question": "An engineering manager uses a Databricks SQL query to monitor ingestion latency for each data source. The manager checks the results of  the query every day, but they are manually rerunning the query each day and waiting for the results.    Which of the following approaches can the manager use to ensure the results of the query are updated each day?",
    "options": [
      "They can schedule the query to refresh every 1 day from the SQL endpoint's page in Databricks SQL.",
      "They can schedule the query to refresh every 12 hours from the SQL endpoint's page in Databricks SQL.",
      "They can schedule the query to refresh every 1 day from the query's page in Databricks SQL.",
      "They can schedule the query to run every 1 day from the Jobs UI.",
      "They can schedule the query to run every 12 hours from the Jobs UI."
    ],
    "answer": [
      "They can schedule the query to refresh every 1 day from the SQL endpoint's page in Databricks SQL."
    ],
    "topic": "Databricks SQL"
  },
  {
    "id": "databricks-086",
    "question": "In which of the following scenarios should a data engineer select a Task in the Depends On field of a new Databricks Job Task?",
    "options": [
      "When another task needs to be replaced by the new task",
      "When another task needs to fail before the new task begins",
      "When another task has the same dependency libraries as the new task",
      "When another task needs to use as little compute resources as possible",
      "When another task needs to successfully complete before the new task begins"
    ],
    "answer": [
      "When another task needs to be replaced by the new task"
    ],
    "topic": "Jobs & Pipelines"
  },
  {
    "id": "databricks-087",
    "question": "A data engineer has been using a Databricks SQL dashboard to monitor the cleanliness of the input data to a data analytics dashboard for a  retail use case. The job has a Databricks SQL query that returns the number of store-level records where sales is equal to zero. The data  engineer wants their entire team to be notified via a messaging webhook whenever this value is greater than 0.    Which of the following approaches can the data engineer use to notify their entire team via a messaging webhook whenever the number of  stores with $0 in sales is greater than zero?",
    "options": [
      "They can set up an Alert with a custom template.",
      "They can set up an Alert with a new email alert destination.",
      "They can set up an Alert with one-time notifications.",
      "They can set up an Alert with a new webhook alert destination.",
      "They can set up an Alert without notifications."
    ],
    "answer": [
      "They can set up an Alert with a custom template."
    ],
    "topic": "Databricks SQL"
  },
  {
    "id": "databricks-088",
    "question": "A data engineer wants to schedule their Databricks SQL dashboard to refresh every hour, but they only want the associated SQL endpoint to  be running when it is necessary. The dashboard has multiple queries on multiple datasets associated with it. The data that feeds the  dashboard is automatically processed using a Databricks Job.    Which of the following approaches can the data engineer use to minimize the total running time of the SQL endpoint used in the refresh  schedule of their dashboard?",
    "options": [
      "They can turn on the Auto Stop feature for the SQL endpoint.",
      "They can ensure the dashboard's SQL endpoint is not one of the included query's SQL endpoint.",
      "They can reduce the cluster size of the SQL endpoint.",
      "They can ensure the dashboard's SQL endpoint matches each of the queries' SQL endpoints.",
      "They can set up the dashboard's SQL endpoint to be serverless."
    ],
    "answer": [
      "They can turn on the Auto Stop feature for the SQL endpoint."
    ],
    "topic": "Databricks SQL"
  },
  {
    "id": "databricks-089",
    "question": "A data engineer needs access to a table new_table, but they do not have the correct permissions. They can ask the table owner for  permission, but they do not know who the table owner is.    Which of the following approaches can be used to identify the owner of new_table?",
    "options": [
      "Review the Permissions tab in the table's page in Data Explorer",
      "All of these options can be used to identify the owner of the table",
      "Review the Owner field in the table's page in Data Explorer",
      "Review the Owner field in the table's page in the cloud storage solution",
      "There is no way to identify the owner of the table"
    ],
    "answer": [
      "Review the Permissions tab in the table's page in Data Explorer"
    ],
    "topic": "Security & Access Control"
  },
  {
    "id": "databricks-090",
    "question": "A new data engineering team team has been assigned to an ELT project. The new data engineering team will need full privileges on the table  sales to fully manage the project.    Which of the following commands can be used to grant full permissions on the database to the new data engineering team?",
    "options": [
      "GRANT ALL PRIVILEGES ON TABLE sales TO team;",
      "GRANT SELECT CREATE MODIFY ON TABLE sales TO team;",
      "GRANT SELECT ON TABLE sales TO team;",
      "GRANT USAGE ON TABLE sales TO team;",
      "GRANT ALL PRIVILEGES ON TABLE team TO sales;"
    ],
    "answer": [
      "GRANT ALL PRIVILEGES ON TABLE sales TO team;"
    ],
    "topic": "Security & Access Control"
  },
  {
    "id": "databricks-091",
    "question": "Which data lakehouse feature results in improved data quality over a traditional data lake?",
    "options": [
      "A data lakehouse stores data in open formats.",
      "A data lakehouse allows the use of SQL queries to examine data.",
      "A data lakehouse provides storage solutions for structured and unstructured data.",
      "A data lakehouse supports ACID-compliant transactions."
    ],
    "answer": [
      "A data lakehouse stores data in open formats."
    ],
    "topic": "Lakehouse Architecture"
  },
  {
    "id": "databricks-092",
    "question": "In which scenario will a data team want to utilize cluster pools?",
    "options": [
      "An automated report needs to be version-controlled across multiple collaborators.",
      "An automated report needs to be runnable by all stakeholders.",
      "An automated report needs to be refreshed as quickly as possible.",
      "An automated report needs to be made reproducible."
    ],
    "answer": [
      "An automated report needs to be version-controlled across multiple collaborators."
    ],
    "topic": "Cluster Management"
  },
  {
    "id": "databricks-093",
    "question": "What is hosted completely in the control plane of the classic Databricks architecture?",
    "options": [
      "Worker node",
      "Databricks web application",
      "Driver node",
      "Databricks Filesystem"
    ],
    "answer": [
      "Worker node"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-094",
    "question": "A data engineer needs to determine whether to use the built-in Databricks Notebooks versioning or version their project using Databricks  Repos.    What is an advantage of using Databricks Repos over the Databricks Notebooks versioning?",
    "options": [
      "Databricks Repos allows users to revert to previous versions of a notebook",
      "Databricks Repos is wholly housed within the Databricks Data Intelligence Platform",
      "Databricks Repos provides the ability to comment on specific changes",
      "Databricks Repos supports the use of multiple branches"
    ],
    "answer": [
      "Databricks Repos allows users to revert to previous versions of a notebook"
    ],
    "topic": "Version Control"
  },
  {
    "id": "databricks-095",
    "question": "What is a benefit of the Databricks Lakehouse Architecture embracing open source technologies?",
    "options": [
      "Avoiding vendor lock-in",
      "Simplified governance",
      "Ability to scale workloads",
      "Cloud-specific integrations"
    ],
    "answer": [
      "Avoiding vendor lock-in"
    ],
    "topic": "Lakehouse Architecture"
  },
  {
    "id": "databricks-096",
    "question": "A data engineer needs to use a Delta table as part of a data pipeline, but they do not know if they have the appropriate permissions.    In which location can the data engineer review their permissions on the table?",
    "options": [
      "Jobs",
      "Dashboards",
      "Catalog Explorer",
      "Repos"
    ],
    "answer": [
      "Jobs"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-097",
    "question": "A data engineer is running code in a Databricks Repo that is cloned from a central Git repository. A colleague of the data engineer informs  them that changes have been made and synced to the central Git repository. The data engineer now needs to sync their Databricks Repo to  get the changes from the central Git repository.    Which Git operation does the data engineer need to run to accomplish this task?",
    "options": [
      "Clone",
      "Pull",
      "Merge",
      "Push"
    ],
    "answer": [
      "Clone"
    ],
    "topic": "Version Control"
  },
  {
    "id": "databricks-098",
    "question": "Which file format is used for storing Delta Lake Table?",
    "options": [
      "CSV",
      "Parquet",
      "JSON",
      "Delta"
    ],
    "answer": [
      "CSV"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-099",
    "question": "A data architect has determined that a table of the following format is necessary:     Which code block is used by SQL DDL command to create an empty Delta table in the above format regardless of whether a table already  exists with this name?",
    "options": [
      "CREATE OR REPLACE TABLE table_name ( employeeId STRING, startDate DATE, avgRating FLOAT )",
      "CREATE OR REPLACE TABLE table_name WITH COLUMNS ( employeeId STRING, startDate DATE, avgRating FLOAT ) USING DELTA",
      "CREATE TABLE IF NOT EXISTS table_name ( employeeId STRING, startDate DATE, avgRating FLOAT )",
      "CREATE TABLE table_name AS SELECT employeeId STRING, startDate DATE, avgRating FLOAT"
    ],
    "answer": [
      "CREATE OR REPLACE TABLE table_name ( employeeId STRING, startDate DATE, avgRating FLOAT )"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-100",
    "question": "A data engineer has been given a new record of data:    id STRING = 'a1'  rank INTEGER = 6  rating FLOAT = 9.4    Which SQL commands can be used to append the new record to an existing Delta table my_table?",
    "options": [
      "INSERT INTO my_table VALUES ('a1', 6, 9.4)",
      "INSERT VALUES ('a1', 6, 9.4) INTO my_table",
      "UPDATE my_table VALUES ('a1', 6, 9.4)",
      "UPDATE VALUES ('a1', 6, 9.4) my_table"
    ],
    "answer": [
      "INSERT INTO my_table VALUES ('a1', 6, 9.4)"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-101",
    "question": "A data engineer has realized that the data files associated with a Delta table are incredibly small. They want to compact the small files to  form larger files to improve performance.    Which keyword can be used to compact the small files?",
    "options": [
      "OPTIMIZE",
      "VACUUM",
      "COMPACTION",
      "REPARTITION"
    ],
    "answer": [
      "OPTIMIZE"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-102",
    "question": "A data engineer wants to create a data entity from a couple of tables. The data entity must be used by other data engineers in other sessions.  It also must be saved to a physical location.    Which of the following data entities should the data engineer create?",
    "options": [
      "Table",
      "Function",
      "View",
      "Temporary view"
    ],
    "answer": [
      "Table"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-103",
    "question": "A data engineer runs a statement every day to copy the previous day’s sales into the table transactions. Each day’s sales are in their own file  in the location \"/transactions/raw\".    Today, the data engineer runs the following command to complete this task:     After running the command today, the data engineer notices that the number of records in table transactions has not changed.    What explains why the statement might not have copied any new records into the table?",
    "options": [
      "The format of the files to be copied were not included with the FORMAT_OPTIONS keyword.",
      "The COPY INTO statement requires the table to be refreshed to view the copied rows.",
      "The previous day’s file has already been copied into the table.",
      "The PARQUET file format does not support COPY INTO."
    ],
    "answer": [
      "The format of the files to be copied were not included with the FORMAT_OPTIONS keyword."
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-104",
    "question": "Which command can be used to write data into a Delta table while avoiding the writing of duplicate records?",
    "options": [
      "DROP",
      "INSERT",
      "MERGE",
      "APPEND"
    ],
    "answer": [
      "DROP"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-105",
    "question": "A data analyst has created a Delta table sales that is used by the entire data analysis team. They want help from the data engineering team  to implement a series of tests to ensure the data is clean. However, the data engineering team uses Python for its tests rather than SQL.    Which command could the data engineering team use to access sales in PySpark?",
    "options": [
      "SELECT * FROM sales",
      "spark.table(\"sales\")",
      "spark.sql(\"sales\")",
      "spark.delta.table(\"sales\")"
    ],
    "answer": [
      "SELECT * FROM sales"
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-106",
    "question": "A data engineer has created a new database using the following command:    CREATE DATABASE IF NOT EXISTS customer360;    In which location will the customer360 database be located?",
    "options": [
      "dbfs:/user/hive/database/customer360",
      "dbfs:/user/hive/warehouse",
      "dbfs:/user/hive/customer360",
      "dbfs:/user/hive/database"
    ],
    "answer": [
      "dbfs:/user/hive/database/customer360"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-107",
    "question": "A data engineer is attempting to drop a Spark SQL table my_table and runs the following command:    DROP TABLE IF EXISTS my_table;    After running this command, the engineer notices that the data files and metadata files have been deleted from the file system.    What is the reason behind the deletion of all these files?",
    "options": [
      "The table was managed",
      "The table's data was smaller than 10 GB",
      "The table did not have a location",
      "The table was external"
    ],
    "answer": [
      "The table was managed"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-108",
    "question": "A data engineer needs to create a table in Databricks using data from a CSV file at location /path/to/csv.    They run the following command:     Which of the following lines of code fills in the above blank to successfully complete the task?",
    "options": [
      "FROM \"path/to/csv\"",
      "USING CSV",
      "FROM CSV",
      "USING DELTA"
    ],
    "answer": [
      "FROM \"path/to/csv\""
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-109",
    "question": "What is a benefit of creating an external table from Parquet rather than CSV when using a CREATE TABLE AS SELECT statement?",
    "options": [
      "Parquet files can be partitioned",
      "Parquet files will become Delta tables",
      "Parquet files have a well-defined schema",
      "Parquet files have the ability to be optimized"
    ],
    "answer": [
      "Parquet files can be partitioned"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-110",
    "question": "Which SQL keyword can be used to convert a table from a long format to a wide format?",
    "options": [
      "TRANSFORM",
      "PIVOT",
      "SUM",
      "CONVERT"
    ],
    "answer": [
      "TRANSFORM"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-111",
    "question": "A data engineer has a Python variable table_name that they would like to use in a SQL query. They want to construct a Python code block that  will run the query using table_name.    They have the following incomplete code block:    ____(f\"SELECT customer_id, spend FROM {table_name}\")    What can be used to fill in the blank to successfully complete the task?",
    "options": [
      "spark.delta.sql",
      "spark.sql",
      "spark.table",
      "dbutils.sql"
    ],
    "answer": [
      "spark.delta.sql"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-112",
    "question": "A data engineer is working with two tables. Each of these tables is displayed below in its entirety.     The data engineer runs the following query to join these tables together:",
    "options": [
      "",
      "",
      "",
      ""
    ],
    "answer": [
      ""
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-113",
    "question": "A data engineer needs to apply custom logic to identify employees with more than 5 years of experience in array column employees in table  stores. The custom logic should create a new column exp_employees that is an array of all of the employees with more than 5 years of  experience for each row. In order to apply this custom logic at scale, the data engineer wants to use the FILTER higher-order function.    Which code block successfully completes this task?",
    "options": [
      "",
      "",
      "",
      ""
    ],
    "answer": [
      ""
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-114",
    "question": "A data engineer that is new to using Python needs to create a Python function to add two integers together and return the sum?    Which code block can the data engineer use to complete this task?",
    "options": [
      "",
      "",
      "",
      ""
    ],
    "answer": [
      ""
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-115",
    "question": "A data engineer has configured a Structured Streaming job to read from a table, manipulate the data, and then perform a streaming write into  a new table.    The code block used by the data engineer is below:     Which line of code should the data engineer use to fill in the blank if the data engineer only wants the query to execute a micro-batch to  process data every 5 seconds?",
    "options": [
      "trigger(\"5 seconds\")",
      "trigger(continuous=\"5 seconds\")",
      "trigger(once=\"5 seconds\")",
      "trigger(processingTime=\"5 seconds\")"
    ],
    "answer": [
      "trigger(\"5 seconds\")"
    ],
    "topic": "Structured Streaming"
  },
  {
    "id": "databricks-117",
    "question": "A data engineer has three tables in a Delta Live Tables (DLT) pipeline. They have configured the pipeline to drop invalid records at each table.  They notice that some data is being dropped due to quality concerns at some point in the DLT pipeline. They would like to determine at which  table in their pipeline the data is being dropped.    Which approach can the data engineer take to identify the table that is dropping the records?",
    "options": [
      "They can set up separate expectations for each table when developing their DLT pipeline.",
      "They can navigate to the DLT pipeline page, click on the “Error” button, and review the present errors.",
      "They can set up DLT to notify them via email when records are dropped.",
      "They can navigate to the DLT pipeline page, click on each table, and view the data quality statistics."
    ],
    "answer": [
      "They can set up separate expectations for each table when developing their DLT pipeline."
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-118",
    "question": "What is used by Spark to record the offset range of the data being processed in each trigger in order for Structured Streaming to reliably track  the exact progress of the processing so that it can handle any kind of failure by restarting and/or reprocessing?",
    "options": [
      "Checkpointing and Write-ahead Logs",
      "Replayable Sources and Idempotent Sinks",
      "Write-ahead Logs and Idempotent Sinks",
      "Checkpointing and Idempotent Sinks"
    ],
    "answer": [
      "Checkpointing and Write-ahead Logs"
    ],
    "topic": "Structured Streaming"
  },
  {
    "id": "databricks-119",
    "question": "What describes the relationship between Gold tables and Silver tables?",
    "options": [
      "Gold tables are more likely to contain aggregations than Silver tables.",
      "Gold tables are more likely to contain valuable data than Silver tables.",
      "Gold tables are more likely to contain a less refined view of data than Silver tables.",
      "Gold tables are more likely to contain truthful data than Silver tables."
    ],
    "answer": [
      "Gold tables are more likely to contain aggregations than Silver tables."
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-120",
    "question": "What describes when to use the CREATE STREAMING LIVE TABLE (formerly CREATE INCREMENTAL LIVE TABLE) syntax over the CREATE LIVE  TABLE syntax when creating Delta Live Tables (DLT) tables using SQL?",
    "options": [
      "CREATE STREAMING LIVE TABLE should be used when the subsequent step in the DLT pipeline is static.",
      "CREATE STREAMING LIVE TABLE should be used when data needs to be processed incrementally.",
      "CREATE STREAMING LIVE TABLE should be used when data needs to be processed through complicated aggregations.",
      "CREATE STREAMING LIVE TABLE should be used when the previous step in the DLT pipeline is static."
    ],
    "answer": [
      "CREATE STREAMING LIVE TABLE should be used when the subsequent step in the DLT pipeline is static."
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-121",
    "question": "A Delta Live Table pipeline includes two datasets defined using STREAMING LIVE TABLE. Three datasets are defined against Delta Lake table  sources using LIVE TABLE.    The table is configured to run in Production mode using the Continuous Pipeline Mode.    What is the expected outcome after clicking Start to update the pipeline assuming previously unprocessed data exists and all definitions are  valid?     testing.    terminated when the pipeline is stopped.",
    "options": [
      "All datasets will be updated at set intervals until the pipeline is shut down. The compute resources will persist to allow for additional",
      "All datasets will be updated once and the pipeline will shut down. The compute resources will persist to allow for additional testing.",
      "All datasets will be updated at set intervals until the pipeline is shut down. The compute resources will be deployed for the update and",
      "All datasets will be updated once and the pipeline will shut down. The compute resources will be terminated."
    ],
    "answer": [
      "All datasets will be updated at set intervals until the pipeline is shut down. The compute resources will persist to allow for additional"
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-122",
    "question": "Which type of workloads are compatible with Auto Loader?",
    "options": [
      "Streaming workloads",
      "Machine learning workloads",
      "Serverless workloads",
      "Batch workloads"
    ],
    "answer": [
      "Streaming workloads"
    ],
    "topic": "Auto Loader"
  },
  {
    "id": "databricks-123",
    "question": "A data engineer has developed a data pipeline to ingest data from a JSON source using Auto Loader, but the engineer has not provided any  type inference or schema hints in their pipeline. Upon reviewing the data, the data engineer has noticed that all of the columns in the target  table are of the string type despite some of the fields only including float or boolean values.    Why has Auto Loader inferred all of the columns to be of the string type?",
    "options": [
      "Auto Loader cannot infer the schema of ingested data",
      "JSON data is a text-based format",
      "Auto Loader only works with string data",
      "All of the fields had at least one null value"
    ],
    "answer": [
      "Auto Loader cannot infer the schema of ingested data"
    ],
    "topic": "Auto Loader"
  },
  {
    "id": "databricks-124",
    "question": "Which statement regarding the relationship between Silver tables and Bronze tables is always true?",
    "options": [
      "Silver tables contain a less refined, less clean view of data than Bronze data.",
      "Silver tables contain aggregates while Bronze data is unaggregated.",
      "Silver tables contain more data than Bronze tables.",
      "Silver tables contain less data than Bronze tables."
    ],
    "answer": [
      "Silver tables contain a less refined, less clean view of data than Bronze data."
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-125",
    "question": "Which query is performing a streaming hop from raw data to a Bronze table?",
    "options": [
      "",
      "",
      "",
      ""
    ],
    "answer": [
      ""
    ],
    "topic": "Structured Streaming"
  },
  {
    "id": "databricks-126",
    "question": "A dataset has been defined using Delta Live Tables and includes an expectations clause:    CONSTRAINT valid_timestamp EXPECT (timestamp > '2020-01-01') ON VIOLATION DROP ROW    What is the expected behavior when a batch of data containing data that violates these constraints is processed?",
    "options": [
      "Records that violate the expectation cause the job to fail.",
      "Records that violate the expectation are added to the target dataset and flagged as invalid in a field added to the target dataset.",
      "Records that violate the expectation are dropped from the target dataset and recorded as invalid in the event log.",
      "Records that violate the expectation are added to the target dataset and recorded as invalid in the event log."
    ],
    "answer": [
      "Records that violate the expectation cause the job to fail."
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-127",
    "question": "A data engineer has a Job with multiple tasks that runs nightly. Each of the tasks runs slowly because the clusters take a long time to start.    Which action can the data engineer perform to improve the start up time for the clusters used for the Job?",
    "options": [
      "They can use endpoints available in Databricks SQL",
      "They can use jobs clusters instead of all-purpose clusters",
      "They can configure the clusters to autoscale for larger data sizes",
      "They can use clusters that are from a cluster pool"
    ],
    "answer": [
      "They can use endpoints available in Databricks SQL"
    ],
    "topic": "Cluster Management"
  },
  {
    "id": "databricks-128",
    "question": "A data engineer has a single-task Job that runs each morning before they begin working. After identifying an upstream data issue, they need  to set up another task to run a new notebook prior to the original task.    Which approach can the data engineer use to set up the new task?",
    "options": [
      "They can clone the existing task in the existing Job and update it to run the new notebook.",
      "They can create a new task in the existing Job and then add it as a dependency of the original task.",
      "They can create a new task in the existing Job and then add the original task as a dependency of the new task.",
      "They can create a new job from scratch and add both tasks to run concurrently."
    ],
    "answer": [
      "They can clone the existing task in the existing Job and update it to run the new notebook."
    ],
    "topic": "Jobs & Pipelines"
  },
  {
    "id": "databricks-129",
    "question": "A single Job runs two notebooks as two separate tasks. A data engineer has noticed that one of the notebooks is running slowly in the Job’s  current run. The data engineer asks a tech lead for help in identifying why this might be the case.    Which approach can the tech lead use to identify why the notebook is running slowly as part of the Job?",
    "options": [
      "They can navigate to the Runs tab in the Jobs UI to immediately review the processing notebook.",
      "They can navigate to the Tasks tab in the Jobs UI and click on the active run to review the processing notebook.",
      "They can navigate to the Runs tab in the Jobs UI and click on the active run to review the processing notebook.",
      "They can navigate to the Tasks tab in the Jobs UI to immediately review the processing notebook."
    ],
    "answer": [
      "They can navigate to the Runs tab in the Jobs UI to immediately review the processing notebook."
    ],
    "topic": "Jobs & Pipelines"
  },
  {
    "id": "databricks-130",
    "question": "A data analysis team has noticed that their Databricks SQL queries are running too slowly when connected to their always-on SQL endpoint.  They claim that this issue is present when many members of the team are running small queries simultaneously. They ask the data  engineering team for help. The data engineering team notices that each of the team’s queries uses the same SQL endpoint.    Which approach can the data engineering team use to improve the latency of the team’s queries?",
    "options": [
      "They can increase the cluster size of the SQL endpoint.",
      "They can increase the maximum bound of the SQL endpoint’s scaling range.",
      "They can turn on the Auto Stop feature for the SQL endpoint.",
      "They can turn on the Serverless feature for the SQL endpoint."
    ],
    "answer": [
      "They can increase the cluster size of the SQL endpoint."
    ],
    "topic": "Databricks SQL"
  },
  {
    "id": "databricks-135",
    "question": "A new data engineering team team has been assigned to an ELT project. The new data engineering team will need full privileges on the table  sales to fully manage the project.    Which command can be used to grant full permissions on the database to the new data engineering team?",
    "options": [
      "GRANT ALL PRIVILEGES ON TABLE sales TO team;",
      "GRANT SELECT CREATE MODIFY ON TABLE sales TO team;",
      "GRANT SELECT ON TABLE sales TO team;",
      "GRANT ALL PRIVILEGES ON TABLE team TO sales;"
    ],
    "answer": [
      "GRANT ALL PRIVILEGES ON TABLE sales TO team;"
    ],
    "topic": "Security & Access Control"
  },
  {
    "id": "databricks-137",
    "question": "Identify how the count_if function and the count where x is null can be used    Consider a table random_values with below data.    What would be the output of below query?  select count_if(col > 1) as count_a. count(*) as count_b.count(col1) as count_c from random_values col1  0  1  2    NULL -  2  3",
    "options": [
      "3 6 5",
      "4 6 5",
      "3 6 6",
      "4 6 6"
    ],
    "answer": [
      "3 6 5"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-138",
    "question": "Which two components function in the DB platform architecture’s control plane? (Choose two.)",
    "options": [
      "Virtual Machines",
      "Compute Orchestration",
      "Serverless Compute",
      "Compute",
      "Unity Catalog"
    ],
    "answer": [
      "Virtual Machines"
    ],
    "topic": "General Databricks"
  },
  {
    "id": "databricks-139",
    "question": "In a healthcare provider organization using Delta Lake to store electronic health records (EHRs), a data analyst needs to analyze a snapshot  of the patient_records table from two weeks ago before some recent data corrections were applied.    What approach should the Data Engineer take to allow the analyst to query that specific prior version?      to query using VERSION AS OF syntax, or export that version to a new Delta table for the analyst to query.",
    "options": [
      "Truncate the table to remove all data, then reload the data from two weeks ago into the truncated table for the analyst to query.",
      "Identify the version number corresponding to two weeks ago from the Delta transaction log, share that version number with the analyst",
      "Restore the table to the version from two weeks ago using the RESTORE command, and have the analyst query the restored table.",
      "Use the VACUUM command to remove all versions of the table older than two weeks, then the analyst can query the remaining version."
    ],
    "answer": [
      "Truncate the table to remove all data, then reload the data from two weeks ago into the truncated table for the analyst to query."
    ],
    "topic": "Delta Lake"
  },
  {
    "id": "databricks-141",
    "question": "A data engineer has configured a Structured Streaming job to read from a table, manipulate the data, and then perform a streaming write into  a new table.    The code block used by the data engineer is below:     The data engineer only wants the query to process all of the available data in as many batches as required.    Which line of code should the data engineer use to fill in the blank?",
    "options": [
      "trigger(availableNow=True)",
      "trigger(processingTime= “once”)",
      "trigger(continuous= “once”)",
      "trigger(once=True)"
    ],
    "answer": [
      "trigger(availableNow=True)"
    ],
    "topic": "Structured Streaming"
  },
  {
    "id": "databricks-142",
    "question": "Data engineer and data analysts are working together on a data pipeline. The data engineer is working on the raw, bronze, and silver layers of  the pipeline using Python, and the data analyst is working on the gold layer of the pipeline using SQL. The raw source of the pipeline is a  streaming input. They now want to migrate their pipeline to use Delta Live Tables.    Which of the following changes will need to be made to the pipeline when migrating to Delta Live Tables?",
    "options": [
      "The pipeline can have different notebook sources in SQL & Python",
      "The pipeline will need to be written entirely in SQL",
      "The pipeline will need to use a batch source in place of a streaming source",
      "The pipeline will need to be written entirely in Python"
    ],
    "answer": [
      "The pipeline can have different notebook sources in SQL & Python"
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-144",
    "question": "Identify the impact of ON VIOLATION DROP ROW and ON VIOLATION FAIL UPDATE for a constraint violation.    A data engineer has created an ETL pipeline using Delta Live table to manage their company travel reimbursement detail, they want to ensure  that the if the location details has not been provided by the employee, the pipeline needs to be terminated.    How can the scenario be implemented?",
    "options": [
      "CONSTRAINT valid_location EXPECT (location = NULL)",
      "CONSTRAINT valid_location EXPECT (location != NULL) ON VIOLATION FAIL UPDATE",
      "CONSTRAINT valid_location EXPECT (location != NULL) ON DROP ROW",
      "CONSTRAINT valid_location EXPECT (location != NULL) ON VIOLATION FAIL"
    ],
    "answer": [
      "CONSTRAINT valid_location EXPECT (location = NULL)"
    ],
    "topic": "Delta Live Tables"
  },
  {
    "id": "databricks-145",
    "question": "Which two conditions are applicable for governance in Databricks Unity Catalog? (Choose two.)         Answers 1   B   21   B   41   C    61   C    81   D   101   A   121   C 2   A   22   D   42   C    62   A    82   D   102   A   122   A 3   C   23   C   43   D    63   E    83   D   103   C   123   B 4   D   24   E   44   E    64   B    84   B   104   C   124   D 5   C   25   D   45   E    65   A    85   C   105   B   125   D 6   C   26   C   46   C    66   D    86   E   106   B   126   C 7   A   27   A   47   E    67   D    87   D   107   A   127   D 8   E   28   A   48   E    68   C    88   A   108   B   128   B 9   B   29   E   49   A    69   B    89   C   109   C   129   C 10   B   30   B   50   A    70   B    90   A   110   B   130   B 11   C   31   D   51   B    71   B    91   D   111   B   135   A 12   E   32   C   52   C    72   E    92   C   112   C   137   A 13   C   33   B   53   D    73   D    93   B   113   A   138   BE 14   D   34   E   54   E    74   E    94   D   114   D   139   B 15   D   35   E   55   E    75   C    95   A   115   D   141   A 16   C   36   D   56   D    76   A    96   C   116   D   142   A 17   A   37   B   57   B    77   A    97   B   117   D   144   B 18   B   38   E   58   C    78   E    98   B   118   A   145   AE 19   C   39   B   59   D    79   E    99   A   119   A 20   A   40   C   60   C    80   B   100   A   120   B",
    "options": [
      "You can have more than 1 metastore within a databricks account console but only 1 per region.",
      "Both catalog and schema must have a managed location in Unity Catalog provided metastore is not associated with a location",
      "You can have multiple catalogs within metastore and 1 catalog can be associated with multiple metastore",
      "If catalog is not associated with location, it’s mandatory to associate schema with managed locations",
      "If metastore is not associated with location, it’s mandatory to associate catalog with managed locations"
    ],
    "answer": [
      "You can have more than 1 metastore within a databricks account console but only 1 per region."
    ],
    "topic": "General Databricks"
  }
]